apiVersion: apps/v1
kind: Deployment
metadata:
  name: springappdeployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: springapp 
  template:
    metadata:
      name: springapppod
      labels:
        app: springapp
    spec:
      containers:
        - name: springappcontainer
          image: dockerhandson/spring-boot-mongo
          ports:
          - containerPort: 8080
          resources:
            requests:
              cpu: 200m
              memory: "256Mi"
            limits: 
              cpu: 200m
              memory: 512Mi
          env: 
          - name: MONGO_DB_HOSTNAME
            value: mongo
          - name: MONGO_DB_USERNAME
            value: devdb
          - name: MONGO_DB_PASSWORD
            value: devdb@123
---
apiVersion: v1 
kind: Service 
metadata:
  name: springappservice 
spec:
  type: NodePort
  selector:
    app: springapp
  ports:
  - port: 80
    targetPort: 8080
    nodePort: 31234
---
apiVersion: apps/v1
kind: ReplicaSet 
metadata:
  name: mongodbrs
spec:
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      name: mongodbpod 
      labels: 
        app: mongo 
    spec: 
      containers:
      - name: mongodbcontainer
        image: mongo 
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: devdb
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: devdb@123
        volumeMounts:
        - name: mongodbhostpath
          mountPath: /data/db
      volumes: 
      - name: mongodbhostpath
        persistentVolumeClaim:
          claimName: mongodbpvc
---
apiVersion: v1 
kind: PersistentVolumeClaim     
metadata: 
  name: mongodbpvc 
spec: 
  storageClassName: manual 
    accessModes:
    - ReadWriteOnce
    resources:
    requests:
        storage: 1Gi
---
apiVersion: v1 
kind: Service 
metadata: 
  name: mongodbservice 
spec:
  type: ClusterIP
  selector:
    app: mongo 
  ports:
  - port: 27017
    targetPort: 27017
